from pathlib import Path
import sys
import numpy as np
from setuptools import setup, Extension
from Cython.Build import cythonize


def cythonize_extensions(force=True):
    """Create all Cython extension modules."""
    include_dirs = [np.get_include()]
    extra_compile_args = ["-std=c99"] if sys.platform != "win32" else []
    extra_link_args = []

    # Autogenerated ufuncs
    ufuncs_path = Path("src/weathercop/ufuncs")
    auto_exts = [
        Extension(
            f"weathercop.ufuncs.{name.stem}",
            [
                f"{name}",
                str(name.parent / name.stem[: -len("0")]) + "code_0.c",
            ],
            include_dirs=include_dirs + [str(ufuncs_path)],
            extra_compile_args=extra_compile_args,
            extra_link_args=extra_link_args,
        )
        for name in ufuncs_path.glob("*.pyx")
    ]

    # Ensure subdirs exist for inplace builds
    for name in ufuncs_path.glob("*.pyx"):
        Path(name.absolute().parent / name.stem).mkdir(exist_ok=True)

    # Main extensions
    core_exts = [
        Extension(
            "weathercop.cvine",
            ["src/weathercop/cvine.pyx"],
            include_dirs=include_dirs,
            extra_compile_args=extra_compile_args,
        ),
        Extension(
            "weathercop.cinv_cdf",
            ["src/weathercop/cinv_cdf.pyx"],
            include_dirs=include_dirs,
            extra_compile_args=extra_compile_args,
        ),
    ]

    return cythonize(auto_exts + core_exts, force=force, language_level="3")


# Cythonize extensions immediately to ensure they're included in the build
EXT_MODULES = cythonize_extensions(force=True)

setup(
    name="weathercop",
    ext_modules=EXT_MODULES,
)
