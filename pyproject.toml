[tool.black]
line-length = 79

[project]
name = "weathercop"
version = "0.1.0"
description = "A Copula-based Weather Generator"
readme = "README.md"
authors = [
  { name = "iskur", email = "32363199+iskur@users.noreply.github.com" }
]
license = "MIT"
requires-python = ">=3.13"
dependencies = [
    "cartopy>=0.24.1",
    "dill>=0.4.0",
    "matplotlib>=3.10.3",
    "netcdf4>=1.7.2",
    "networkx>=3.5",
    "numexpr>=2.11.0",
    "numpy>=2.3.1",
    "pandas>=2.3.0",
    "scipy>=1.16.0",
    "sympy>=1.14.0",
    "timezonefinder>=6.5.9",
    "tqdm>=4.67.1",
    "varwg",
    "xarray>=2025.6.1",
]

[build-system]
requires = ["setuptools>=61", "cython", "numpy"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[dependency-groups]
dev = [
    "cython>=3.1.2",
    "flake8>=7.3.0",
    "ipython>=9.5.0",
    "pre-commit>=4.0.0",
    "psutil>=7.1.2",
    "pyflakes>=3.4.0",
    "pytest>=8.4.1",
    "setuptools>=80.9.0",
]
optional = [
    "pyfftw>=0.15.0",
]
test = [
    "cython>=3.1.2",
    "psutil>=7.1.2",
    "pytest>=8.4.1",
    "setuptools>=80.9.0",
    "tox>=4.24.2",
    "tox-uv>=1.20.0",
]

[tool.pytest.ini_options]
# Use --pdb flag manually when debugging: pytest --pdb
# addopts = "--pdb"
testpaths = ["src/weathercop/tests"]
python_files = ["test_*.py"]
python_classes = ["Test"]
python_functions = ["test_*"]
# Use function scope for fixtures to maximize memory cleanup
addopts = "-v --tb=short"

[tool.mypy]
disable_error_code = ["import-untyped"]

[tool.cibuildwheel]
# Build for Python 3.13 only
build = "cp313-*"
skip = "pp* *-musllinux_*"

# Skip testing during build to avoid installing heavy dependencies (cartopy->pyproj->proj)
# Extensions are validated by successful compilation; smoke tests run in CI workflow
test-skip = "*"

# Platform-specific settings
[tool.cibuildwheel.linux]
archs = ["x86_64"]
before-build = "pip install cython numpy setuptools"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
before-build = "pip install cython numpy setuptools"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
before-build = "pip install cython numpy setuptools"
