#+TITLE: Basic experiments with vine copulae

* Initialization

#+BEGIN_SRC python :session :exports :results silent
import numpy as np
import matplotlib.pyplot as plt
from weathercop import ar_models as ar
from weathercop import vine as vines
from scipy import stats as spstats
from weathercop import cop_conf
#+END_SRC

#+BEGIN_SRC python :session :exports :results silent
data_filepath = os.path.join(cop_conf.weathercop_dir, "code",
                             "vg_data.npz")
# varnames = "R theta ILWR Qsw".split()
varnames = "R theta ILWR Qsw rh v u".split()
data_varnames = "R theta Qsw ILWR rh u v".split()
# varnames = cop_conf.varnames
with np.load(data_filepath, encoding="bytes") as saved:
    data_summer = saved["summer"]
    data_winter = saved["winter"]
    data_all = saved["all"]
    dtimes = saved["dtimes"]
    # doys = saved["doys"]
#+END_SRC

* Vine fit to data

#+BEGIN_SRC python :session :exports :results silent
reload(vines)
for data, title in zip((data_summer, data_winter),
                       ("summer", "winter")):
    data = np.array([data[data_varnames.index(varname)]
                     for varname in varnames])
    K, T = data.shape
    data_ranks = np.array([stats.rel_ranks(row) for row in data])
    vine = vines.RVine(data_ranks, k=0, varnames=varnames,
                       verbose=True)
    sim_ranks = vine.simulate()
    sim = np.array([spstats.distributions.norm.ppf(ranks)
                    for ranks in sim_ranks])
    cmap = "terrain"
    plotting.ccplom(sim, k=0, x_bins=12, y_bins=12,
                    cmap=cmap, title="%s simulated" % title,
                    opacity=.25, kind="img", varnames=varnames)
    plotting.ccplom(data, k=0, x_bins=12, y_bins=12,
                    cmap=cmap, title="%s data" % title,
                    opacity=.25, kind="img", varnames=varnames)
    # plotting.ccplom(data_, k=1, title="data (t-1)", opacity=.25,
    #                 kind="img",
    #                 varnames=varnames)
    fig, axs = vine.plot(edge_labels="copulas")
    fig.suptitle(title)
    vine.plot_tplom()
    # fig, axs = plt.subplots(K, sharex=True)
    # for i, ax in enumerate(axs):
    #     ax.plot(data[i], label="data")
    #     ax.plot(cop_sim[i], label="cop sim")
    #     ax.plot(var_sim[i], label="VAR")
    #     ax.set_title(varnames[i])
    #     ax.grid(True)
    #     if i == 0:
    #         ax.legend()
    # fig.suptitle(title)
    break
plt.show()

#+END_SRC

* Vine fit to VAR residuals

#+BEGIN_SRC python :session :exports :results silent
for data, title in zip((data_summer, data_winter),
                       ("summer", "winter")):
    # data = np.hstack((data_summer, data_winter))
    # data = data_all
    # data = np.vstack((doys[None, :] % 182, data))
    # data = np.vstack((data_all[None, 0], data))
    data = np.array([data[data_varnames.index(varname)]
                     for varname in varnames])
    p = 3
    K, T = data.shape
    B, sigma_u = ar.VAR_LS(data, p=p)
    data_residuals = ar.VAR_residuals(data, B, p=p)
    data_ranks = np.array([stats.rel_ranks(row) for row in data_residuals])
    vine = RVine(data_ranks, k=0, varnames=varnames,
                 verbose=True)
    residuals_sim_ranks = vine.simulate()
    residuals_sim = np.array([spstats.distributions.norm.ppf(ranks)
                              for ranks in residuals_sim_ranks])
    cmap = "terrain"
    plotting.ccplom(residuals_sim, k=0, x_bins=12, y_bins=12,
                    cmap=cmap, title="%s simulated" % title,
                    opacity=.25, kind="img", varnames=varnames)
    plotting.ccplom(data_residuals, k=0, x_bins=12, y_bins=12,
                    cmap=cmap, title="%s data" % title,
                    opacity=.25, kind="img", varnames=varnames)
    # plotting.ccplom(data_residuals, k=1, title="data (t-1)", opacity=.25,
    #                 kind="img",
    #                 varnames=varnames)
    fig, axs = vine.plot(edge_labels="copulas")
    fig.suptitle(title)
    # vine.plot_tplom()
    cop_sim = ar.VAR_LS_sim(B, sigma_u, T=T, u=residuals_sim)
    var_sim = ar.VAR_LS_sim(B, sigma_u, T=T)
    plotting.ccplom(cop_sim, k=0, x_bins=12, y_bins=12, cmap=cmap,
                    title="%s cop sim" % title, opacity=.25,
                    kind="img", varnames=varnames)
    plotting.ccplom(var_sim, k=0, x_bins=12, y_bins=12, cmap=cmap,
                    title="%s var sim" % title, opacity=.25,
                    kind="img", varnames=varnames)
    fig, axs = plt.subplots(K, sharex=True)
    for i, ax in enumerate(axs):
        ax.plot(data[i], label="data")
        ax.plot(cop_sim[i], label="cop sim")
        ax.plot(var_sim[i], label="VAR")
        ax.set_title(varnames[i])
        ax.grid(True)
        if i == 0:
            ax.legend()
    fig.suptitle(title)
    break
plt.show()
#+END_SRC
